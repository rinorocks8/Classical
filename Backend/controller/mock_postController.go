// Code generated by MockGen. DO NOT EDIT.
// Source: controller/postController.go

// Package controller is a generated GoMock package.
package controller

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPostController is a mock of PostController interface.
type MockPostController struct {
	ctrl     *gomock.Controller
	recorder *MockPostControllerMockRecorder
}

// MockPostControllerMockRecorder is the mock recorder for MockPostController.
type MockPostControllerMockRecorder struct {
	mock *MockPostController
}

// NewMockPostController creates a new mock instance.
func NewMockPostController(ctrl *gomock.Controller) *MockPostController {
	mock := &MockPostController{ctrl: ctrl}
	mock.recorder = &MockPostControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostController) EXPECT() *MockPostControllerMockRecorder {
	return m.recorder
}

// CreateClassPost mocks base method.
func (m *MockPostController) CreateClassPost(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateClassPost", arg0, arg1)
}

// CreateClassPost indicates an expected call of CreateClassPost.
func (mr *MockPostControllerMockRecorder) CreateClassPost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClassPost", reflect.TypeOf((*MockPostController)(nil).CreateClassPost), arg0, arg1)
}

// DecreasePostVotes mocks base method.
func (m *MockPostController) DecreasePostVotes(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DecreasePostVotes", w, r)
}

// DecreasePostVotes indicates an expected call of DecreasePostVotes.
func (mr *MockPostControllerMockRecorder) DecreasePostVotes(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreasePostVotes", reflect.TypeOf((*MockPostController)(nil).DecreasePostVotes), w, r)
}

// GetClassPostsByName mocks base method.
func (m *MockPostController) GetClassPostsByName(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetClassPostsByName", w, r)
}

// GetClassPostsByName indicates an expected call of GetClassPostsByName.
func (mr *MockPostControllerMockRecorder) GetClassPostsByName(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClassPostsByName", reflect.TypeOf((*MockPostController)(nil).GetClassPostsByName), w, r)
}

// IncreasePostVote mocks base method.
func (m *MockPostController) IncreasePostVote(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncreasePostVote", w, r)
}

// IncreasePostVote indicates an expected call of IncreasePostVote.
func (mr *MockPostControllerMockRecorder) IncreasePostVote(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreasePostVote", reflect.TypeOf((*MockPostController)(nil).IncreasePostVote), w, r)
}
